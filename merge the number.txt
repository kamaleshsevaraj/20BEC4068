app.js
import React, { useState } from 'react';
import './App.css';

function App() {
  const [urls, setUrls] = useState('');
  const [numbers, setNumbers] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const handleInputChange = (e) => {
    setUrls(e.target.value);
  };

  const fetchNumbers = async () => {
    setIsLoading(true);

    try {
      const response = await fetch(`http://localhost:3000/numbers?${urls}`);
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();
      setNumbers(data.numbers);
    } catch (error) {
      console.error('Error fetching data:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="App">
      <h1>Number Management Service</h1>
      <div className="input-container">
        <input
          type="text"
          placeholder="Enter URLs separated by '&' (e.g., url=http://example.com&url=http://another.com)"
          value={urls}
          onChange={handleInputChange}
        />
        <button onClick={fetchNumbers}>Fetch Numbers</button>
      </div>
      {isLoading ? (
        <p className="loading">Loading...</p>
      ) : (
        <div className="number-list">
          <h2>Merged Unique Numbers</h2>
          <ul>
            {numbers.map((number) => (
              <li key={number}>{number}</li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}

export default App;
app.css
body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    background-color: #f5f5f5;
  }
  
  /* Style the container */
  .App {
    text-align: center;
    margin: 0 auto;
    max-width: 800px;
    padding: 40px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    border-radius: 10px;
  }
  
  /* Style the header */
  h1 {
    font-size: 32px;
    color: #333;
    margin-bottom: 20px;
  }
  
  /* Style the input container */
  .input-container {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 20px;
  }
  
  input {
    flex: 1;
    padding: 10px;
    margin-right: 10px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
  }
  
  button {
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
  }
  
  button:hover {
    background-color: #0056b3;
  }
  
  /* Style the loading indicator */
  .loading {
    font-size: 18px;
    color: #007bff;
    margin-top: 20px;
  }
  
  /* Style the number list */
  .number-list {
    text-align: left;
    margin-top: 20px;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
  }
  
  li {
    margin: 5px 0;
    font-size: 18px;
    background-color: #f9f9f9;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }
  
  li:hover {
    background-color: #e0e0e0;
  }